{"mappings":"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","sources":["<anon>","script.js"],"sourcesContent":["// test data\nconst recipeList = [\n    {\n        title: \"Spaghetti Carbonara\",\n        description: \"A classic Italian pasta dish made with eggs, cheese, pancetta, and pepper.\",\n        steps: [\n            \"Boil spaghetti\",\n            \"Cook pancetta\",\n            \"Mix eggs and cheese\",\n            \"Combine all ingredients\"\n        ],\n        tags: [\n            \"pasta\",\n            \"Italian\",\n            \"comfort food\"\n        ],\n        favourite: true\n    },\n    {\n        title: \"Chicken Stir-Fry\",\n        description: \"A quick and easy stir-fry recipe with chicken, vegetables, and a savory sauce.\",\n        steps: [\n            \"Prepare vegetables\",\n            \"Cook chicken\",\n            \"Stir-fry vegetables\",\n            \"Add sauce and combine\"\n        ],\n        tags: [\n            \"Asian\",\n            \"quick meal\",\n            \"healthy\"\n        ],\n        favourite: false\n    },\n    {\n        title: \"Chocolate Chip Cookies\",\n        description: \"Delicious homemade cookies with gooey chocolate chips.\",\n        steps: [\n            \"Mix ingredients\",\n            \"Scoop dough onto baking sheet\",\n            \"Bake cookies\"\n        ],\n        tags: [\n            \"dessert\",\n            \"cookies\",\n            \"baking\"\n        ],\n        favourite: true\n    },\n    {\n        title: \"Caesar Salad\",\n        description: \"A fresh and crisp salad with romaine lettuce, croutons, and Caesar dressing.\",\n        steps: [\n            \"Chop lettuce\",\n            \"Prepare croutons\",\n            \"Mix dressing\",\n            \"Combine all ingredients\"\n        ],\n        tags: [\n            \"salad\",\n            \"healthy\",\n            \"easy\"\n        ],\n        favourite: false\n    },\n    {\n        title: \"Beef Tacos\",\n        description: \"Tasty tacos with seasoned beef, fresh toppings, and a soft tortilla.\",\n        steps: [\n            \"Cook beef with seasoning\",\n            \"Prepare toppings\",\n            \"Assemble tacos\"\n        ],\n        tags: [\n            \"Mexican\",\n            \"quick meal\",\n            \"comfort food\"\n        ],\n        favourite: true\n    }\n];\n// adding HTML elements\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    const recipeListDiv = document.querySelector(\".recipe-list\");\n    const stepInput = document.getElementById(\"recipe-steps\");\n    const addStepButton = document.querySelector(\".recipe-step-button\");\n    const stepsPreview = document.querySelector(\".steps-preview ol\");\n    const tagInput = document.getElementById(\"recipe-tags\");\n    const addTagButton = document.querySelector(\".recipe-tag-button\");\n    const tagsPreview = document.querySelector(\".tags-preview p\");\n    const tagMemory = [];\n    const stepMemory = [];\n    const resetButton = document.getElementById(\"add-modal-reset-button\");\n    const showModalButton = document.getElementById(\"show-modal-button\");\n    const addModal = document.querySelector(\".add-modal\");\n    const addRecipeButton = document.getElementById(\"submit-recipe\");\n    const homeButton = document.getElementById(\"home-button\");\n    const favouriteButton = document.getElementById(\"favourite-button\");\n    // FIXME:\n    // const tagFilter = document.getElementById(\"tag-filter\");\n    // render all tags\n    // tagFilter.innerHTML =\n    //   `Filter: ` +\n    //   recipeList\n    //     .flatMap((recipe) => recipe.tags)\n    //     .map((tag) => `<button class=\"filter-button\">${tag}</button>`)\n    //     .join(\"\");\n    // render recipes HTML\n    function renderRecipes(recipes) {\n        recipeListDiv.innerHTML = \"\";\n        recipes.forEach((recipe, index)=>{\n            const recipeCard = document.createElement(\"div\");\n            recipeCard.classList.add(\"recipe-card\");\n            recipeCard.innerHTML = `\n          <h2>${recipe.title} ${recipe.favourite ? \"\\u2764\\uFE0F\" : \"\"}</h2>\n          <p>${recipe.description}</p>\n          <h4 class=\"recipe-list-h4\">Steps:</h4>\n          <ol class=\"ordered-list\">\n            ${recipe.steps.map((step, i)=>`<li>${i + 1}. ${step}</li>`).join(\"\")}\n          </ol>\n          <h5>Tags</h5>\n          <p class=\"recipe-tags\">${recipe.tags.join(\", \")}</p>\n          <div class=\"recipe-buttons\">\n            <button class=\"button recipe-button edit-btn\">Edit</button>\n            <button class=\"button recipe-button delete-btn\">Delete</button>\n          </div>\n        `;\n            const editButton = recipeCard.querySelector(\".edit-btn\");\n            const deleteButton = recipeCard.querySelector(\".delete-btn\");\n            editButton.addEventListener(\"click\", ()=>{\n                document.getElementById(\"recipe-title\").value = recipe.title;\n                document.getElementById(\"recipe-description\").value = recipe.description;\n                document.getElementById(\"recipe-favourite\").checked = recipe.favourite;\n                stepMemory.length = 0;\n                stepsPreview.innerHTML = \"\";\n                recipe.steps.forEach((step)=>{\n                    stepMemory.push(step);\n                    const newStep = document.createElement(\"li\");\n                    newStep.textContent = step;\n                    stepsPreview.appendChild(newStep);\n                });\n                tagMemory.length = 0;\n                tagsPreview.textContent = \"\";\n                recipe.tags.forEach((tag)=>{\n                    tagMemory.push(tag);\n                });\n                tagsPreview.textContent = tagMemory.join(\", \");\n                addModal.style.display = \"flex\";\n                showModalButton.style.backgroundColor = \"#f49cbb\";\n            });\n            deleteButton.addEventListener(\"click\", ()=>{\n                recipeList.splice(index, 1);\n                renderRecipes(recipeList);\n            });\n            recipeListDiv.appendChild(recipeCard);\n        });\n    }\n    addStepButton.addEventListener(\"click\", ()=>{\n        const stepValue = stepInput.value.trim();\n        if (stepValue !== \"\") {\n            stepMemory.push(stepValue);\n            const newStep = document.createElement(\"li\");\n            newStep.textContent = stepValue;\n            stepsPreview.appendChild(newStep);\n            stepInput.value = \"\";\n        }\n    });\n    addTagButton.addEventListener(\"click\", ()=>{\n        const tagValue = tagInput.value.trim();\n        if (tagValue !== \"\") {\n            if (!tagMemory.includes(tagValue)) tagMemory.push(tagValue);\n            tagsPreview.textContent = \"Tags: \" + tagMemory.join(\", \");\n            tagInput.value = \"\";\n        }\n    });\n    resetButton.addEventListener(\"click\", ()=>{\n        document.querySelectorAll(\".recipe-input\").forEach((input)=>input.value = \"\");\n        document.getElementById(\"recipe-favourite\").checked = false;\n        stepsPreview.innerHTML = \"\";\n        tagMemory.length = 0;\n        tagsPreview.textContent = \"\";\n    });\n    addRecipeButton.addEventListener(\"click\", ()=>{\n        // getting values from title, description and favourite checkbox\n        const title = document.getElementById(\"recipe-title\").value.trim();\n        const description = document.getElementById(\"recipe-description\").value.trim();\n        const favourite = document.getElementById(\"recipe-favourite\").checked;\n        if (title && description) {\n            const newRecipe = {\n                title,\n                description,\n                steps: [\n                    ...stepMemory\n                ],\n                tags: [\n                    ...tagMemory\n                ],\n                favourite\n            };\n            recipeList.push(newRecipe);\n            renderRecipes(recipeList);\n            // Reset input fields after adding recipe\n            resetButton.click();\n            addModal.style.display = \"none\";\n            showModalButton.style.backgroundColor = \"#f4f4f4\";\n        }\n    });\n    // Show/hide modal and change button color\n    showModalButton.addEventListener(\"click\", ()=>{\n        if (addModal.style.display === \"none\" || addModal.style.display === \"\") {\n            addModal.style.display = \"flex\";\n            showModalButton.style.backgroundColor = \"#f49cbb\";\n        } else {\n            addModal.style.display = \"none\";\n            showModalButton.style.backgroundColor = \"#f4f4f4\";\n        }\n    });\n    // home button\n    homeButton.addEventListener(\"click\", ()=>{\n        addModal.style.display = \"none\";\n        showModalButton.style.backgroundColor = \"#f4f4f4\";\n        renderRecipes(recipeList); // Render full recipe list\n    });\n    // Favourite button event listener\n    favouriteButton.addEventListener(\"click\", ()=>{\n        const favouriteRecipes = recipeList.filter((recipe)=>recipe.favourite);\n        renderRecipes(favouriteRecipes); // Render only favourite recipes\n    });\n    renderRecipes(recipeList); // Initial render\n});\n\n//# sourceMappingURL=index.aee88acc.js.map\n","// test data\nconst recipeList = [\n  {\n    title: \"Spaghetti Carbonara\",\n    description:\n      \"A classic Italian pasta dish made with eggs, cheese, pancetta, and pepper.\",\n    steps: [\n      \"Boil spaghetti\",\n      \"Cook pancetta\",\n      \"Mix eggs and cheese\",\n      \"Combine all ingredients\",\n    ],\n    tags: [\"pasta\", \"Italian\", \"comfort food\"],\n    favourite: true,\n  },\n  {\n    title: \"Chicken Stir-Fry\",\n    description:\n      \"A quick and easy stir-fry recipe with chicken, vegetables, and a savory sauce.\",\n    steps: [\n      \"Prepare vegetables\",\n      \"Cook chicken\",\n      \"Stir-fry vegetables\",\n      \"Add sauce and combine\",\n    ],\n    tags: [\"Asian\", \"quick meal\", \"healthy\"],\n    favourite: false,\n  },\n  {\n    title: \"Chocolate Chip Cookies\",\n    description: \"Delicious homemade cookies with gooey chocolate chips.\",\n    steps: [\"Mix ingredients\", \"Scoop dough onto baking sheet\", \"Bake cookies\"],\n    tags: [\"dessert\", \"cookies\", \"baking\"],\n    favourite: true,\n  },\n  {\n    title: \"Caesar Salad\",\n    description:\n      \"A fresh and crisp salad with romaine lettuce, croutons, and Caesar dressing.\",\n    steps: [\n      \"Chop lettuce\",\n      \"Prepare croutons\",\n      \"Mix dressing\",\n      \"Combine all ingredients\",\n    ],\n    tags: [\"salad\", \"healthy\", \"easy\"],\n    favourite: false,\n  },\n  {\n    title: \"Beef Tacos\",\n    description:\n      \"Tasty tacos with seasoned beef, fresh toppings, and a soft tortilla.\",\n    steps: [\"Cook beef with seasoning\", \"Prepare toppings\", \"Assemble tacos\"],\n    tags: [\"Mexican\", \"quick meal\", \"comfort food\"],\n    favourite: true,\n  },\n];\n\n// adding HTML elements\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const recipeListDiv = document.querySelector(\".recipe-list\");\n  const stepInput = document.getElementById(\"recipe-steps\");\n  const addStepButton = document.querySelector(\".recipe-step-button\");\n  const stepsPreview = document.querySelector(\".steps-preview ol\");\n\n  const tagInput = document.getElementById(\"recipe-tags\");\n  const addTagButton = document.querySelector(\".recipe-tag-button\");\n  const tagsPreview = document.querySelector(\".tags-preview p\");\n  const tagMemory = [];\n  const stepMemory = [];\n\n  const resetButton = document.getElementById(\"add-modal-reset-button\");\n  const showModalButton = document.getElementById(\"show-modal-button\");\n  const addModal = document.querySelector(\".add-modal\");\n  const addRecipeButton = document.getElementById(\"submit-recipe\");\n\n  const homeButton = document.getElementById(\"home-button\");\n  const favouriteButton = document.getElementById(\"favourite-button\");\n\n  // FIXME:\n  // const tagFilter = document.getElementById(\"tag-filter\");\n  // render all tags\n  // tagFilter.innerHTML =\n  //   `Filter: ` +\n  //   recipeList\n  //     .flatMap((recipe) => recipe.tags)\n  //     .map((tag) => `<button class=\"filter-button\">${tag}</button>`)\n  //     .join(\"\");\n\n  // render recipes HTML\n  function renderRecipes(recipes) {\n    recipeListDiv.innerHTML = \"\";\n    recipes.forEach((recipe, index) => {\n      const recipeCard = document.createElement(\"div\");\n      recipeCard.classList.add(\"recipe-card\");\n\n      recipeCard.innerHTML = `\n          <h2>${recipe.title} ${recipe.favourite ? \"❤️\" : \"\"}</h2>\n          <p>${recipe.description}</p>\n          <h4 class=\"recipe-list-h4\">Steps:</h4>\n          <ol class=\"ordered-list\">\n            ${recipe.steps\n              .map((step, i) => `<li>${i + 1}. ${step}</li>`)\n              .join(\"\")}\n          </ol>\n          <h5>Tags</h5>\n          <p class=\"recipe-tags\">${recipe.tags.join(\", \")}</p>\n          <div class=\"recipe-buttons\">\n            <button class=\"button recipe-button edit-btn\">Edit</button>\n            <button class=\"button recipe-button delete-btn\">Delete</button>\n          </div>\n        `;\n\n      const editButton = recipeCard.querySelector(\".edit-btn\");\n      const deleteButton = recipeCard.querySelector(\".delete-btn\");\n\n      editButton.addEventListener(\"click\", () => {\n        document.getElementById(\"recipe-title\").value = recipe.title;\n        document.getElementById(\"recipe-description\").value =\n          recipe.description;\n        document.getElementById(\"recipe-favourite\").checked = recipe.favourite;\n\n        stepMemory.length = 0;\n        stepsPreview.innerHTML = \"\";\n        recipe.steps.forEach((step) => {\n          stepMemory.push(step);\n          const newStep = document.createElement(\"li\");\n          newStep.textContent = step;\n          stepsPreview.appendChild(newStep);\n        });\n\n        tagMemory.length = 0;\n        tagsPreview.textContent = \"\";\n        recipe.tags.forEach((tag) => {\n          tagMemory.push(tag);\n        });\n        tagsPreview.textContent = tagMemory.join(\", \");\n\n        addModal.style.display = \"flex\";\n        showModalButton.style.backgroundColor = \"#f49cbb\";\n      });\n\n      deleteButton.addEventListener(\"click\", () => {\n        recipeList.splice(index, 1);\n        renderRecipes(recipeList);\n      });\n\n      recipeListDiv.appendChild(recipeCard);\n    });\n  }\n\n  addStepButton.addEventListener(\"click\", () => {\n    const stepValue = stepInput.value.trim();\n    if (stepValue !== \"\") {\n      stepMemory.push(stepValue);\n      const newStep = document.createElement(\"li\");\n      newStep.textContent = stepValue;\n      stepsPreview.appendChild(newStep);\n      stepInput.value = \"\";\n    }\n  });\n\n  addTagButton.addEventListener(\"click\", () => {\n    const tagValue = tagInput.value.trim();\n    if (tagValue !== \"\") {\n      if (!tagMemory.includes(tagValue)) {\n        tagMemory.push(tagValue);\n      }\n      tagsPreview.textContent = \"Tags: \" + tagMemory.join(\", \");\n      tagInput.value = \"\";\n    }\n  });\n\n  resetButton.addEventListener(\"click\", () => {\n    document\n      .querySelectorAll(\".recipe-input\")\n      .forEach((input) => (input.value = \"\"));\n    document.getElementById(\"recipe-favourite\").checked = false;\n    stepsPreview.innerHTML = \"\";\n    tagMemory.length = 0;\n    tagsPreview.textContent = \"\";\n  });\n\n  addRecipeButton.addEventListener(\"click\", () => {\n    // getting values from title, description and favourite checkbox\n    const title = document.getElementById(\"recipe-title\").value.trim();\n    const description = document\n      .getElementById(\"recipe-description\")\n      .value.trim();\n    const favourite = document.getElementById(\"recipe-favourite\").checked;\n\n    if (title && description) {\n      const newRecipe = {\n        title,\n        description,\n        steps: [...stepMemory],\n        tags: [...tagMemory],\n        favourite,\n      };\n\n      recipeList.push(newRecipe);\n      renderRecipes(recipeList);\n\n      // Reset input fields after adding recipe\n      resetButton.click();\n      addModal.style.display = \"none\";\n      showModalButton.style.backgroundColor = \"#f4f4f4\";\n    }\n  });\n\n  // Show/hide modal and change button color\n  showModalButton.addEventListener(\"click\", () => {\n    if (addModal.style.display === \"none\" || addModal.style.display === \"\") {\n      addModal.style.display = \"flex\";\n      showModalButton.style.backgroundColor = \"#f49cbb\";\n    } else {\n      addModal.style.display = \"none\";\n      showModalButton.style.backgroundColor = \"#f4f4f4\";\n    }\n  });\n\n  // home button\n  homeButton.addEventListener(\"click\", () => {\n    addModal.style.display = \"none\";\n    showModalButton.style.backgroundColor = \"#f4f4f4\";\n    renderRecipes(recipeList); // Render full recipe list\n  });\n\n  // Favourite button event listener\n  favouriteButton.addEventListener(\"click\", () => {\n    const favouriteRecipes = recipeList.filter((recipe) => recipe.favourite);\n    renderRecipes(favouriteRecipes); // Render only favourite recipes\n  });\n\n  renderRecipes(recipeList); // Initial render\n});\n"],"names":["recipeList","title","description","steps","tags","favourite","document","addEventListener","recipeListDiv","querySelector","stepInput","getElementById","addStepButton","stepsPreview","tagInput","addTagButton","tagsPreview","tagMemory","stepMemory","resetButton","showModalButton","addModal","addRecipeButton","homeButton","favouriteButton","renderRecipes","recipes","innerHTML","forEach","recipe","index","recipeCard","createElement","classList","add","map","step","i","join","editButton","deleteButton","value","checked","length","push","newStep","textContent","appendChild","tag","style","display","backgroundColor","splice","stepValue","trim","tagValue","includes","querySelectorAll","input","newRecipe","click","filter"],"version":3,"file":"index.aee88acc.js.map"}